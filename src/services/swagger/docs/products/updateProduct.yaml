
/api/products/{slug}:
  put:
    tags:
      - Products
    description: Find a product by its slug and update it
    summary: Update a product
    operationId: updateProduct
    security:
      - bearerAuth: []
    parameters:
      - name: slug
        in: path
        description: slug of the product to update
        required: true
        schema:
          type: string
          example: mandarin-1
    requestBody:
      description: Update data
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              name:
                type: string
                description: Product name
                example: mandarin
              category:
                type: string
                description: Product category
                example: fruits
              price:
                type: number
                description: Product price
                example: 100
              brand:
                type: string
                description: Product brand
                example: juan's mandarins
              countInStock:
                type: number
                description: Product stock count
                example: 10
              description:
                type: string
                description: Product description
                example: high-quality mandarins
              oldImages:
                type: array
                description: Array of old images to keep for the product
                items:
                  type: string
              images:
                type: array
                description: Array of new images to add to the product
                items:
                  type: string
                  format: binary
    responses:
      200:
        description: Product updated
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: Product updated
                data:
                  $ref: '#/components/schemas/Product'
      400:
        description: Invalid data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiError'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiError'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiError'
      404:
        description: Product not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiError'
      422:
        description: Validation error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
      500:
        description: Server error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiError'

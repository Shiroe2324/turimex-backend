/api/users:
  get:
    tags:
      - Users
    description: Get all users with the specified parameters
    summary: Get users
    operationId: getUsers
    parameters:
      - name: page
        in: query
        description: Page number
        required: false
        explode: true
        schema:
          type: integer
          example: 1
      - name: pageSize
        in: query
        description: Number of users per page
        required: false
        explode: true
        schema:
          type: integer
          example: 10
      - name: sort
        in: query
        description: Field by which users are sorted
        required: false
        explode: true
        schema:
          type: string
          enum:
            - createdAt:asc
            - createdAt:desc
    responses:
      200:
        description: Users found
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/User'
                page:
                  type: integer
                  description: Current page number
                  example: 1
                pageSize:
                  type: integer
                  description: Number of users per page
                  example: 10
                total:
                  type: integer
                  description: Total users found
                  example: 1
      422:
        description: Validation error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationError'
      500:
        description: Server error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiError'
